SELECT ENAME,DEPTNO,
    (SELECT DNAME FROM DEPT WHERE DEPTNO=EMP.DEPTNO)
FROM EMP;

SELECT
    ENAME,
    EMP.DEPTNO,
    DNAME,LOC
--        ,DEPT.DEPTNO
FROM EMP, DEPT
WHERE EMP.DEPTNO=DEPT.DEPTNO
ORDER BY ENAME;
-- inner join

SELECT PAY_ID,
       PAY_HISTORY.EMPNO,
       EMP.EMPNO,
       ENAME,
       AMOUNT,
       BONUS
FROM PAY_HISTORY INNER JOIN EMP
ON PAY_HISTORY.EMPNO = EMP.EMPNO
WHERE AMOUNT >= 2000
ORDER BY PAY_ID;

-- 가명 AS
SELECT ENAME AS 사원이름 FROM EMP;
SELECT ENAME 사원이름 FROM EMP;
SELECT e.ENAME,e.Empno 사원이름 FROM EMP e;
-- SELECT e.ENAME,e.Empno 사원이름 FROM EMP as e;
SELECT e.*,d.DNAME
    FROM EMP e INNER JOIN DEPT d
    ON e.DEPTNO=d.DEPTNO;


SELECT DISTINCT DEPTNO FROM EMP;
SELECT * FROM DEPT;
SELECT * FROM EMP WHERE DEPTNO IS NULL;
-- 7698,7782,7788
UPDATE EMP SET DEPTNO=NULL WHERE EMPNO IN (7698,7782,7788);

SELECT COUNT(*) FROM EMP;
SELECT *
    FROM EMP e INNER JOIN DEPT d
    ON e.DEPTNO=d.DEPTNO;
SELECT *
    FROM EMP e FULL OUTER JOIN DEPT d
ON e.DEPTNO=d.DEPTNO;

-- INNER JOIN == NATUAL JOIN : 자동으로 on의 조건을 생성
-- pk == fk 이름이 같아야함
SELECT * FROM EMP e NATURAL JOIN DEPT d;



SELECT EMPNO,ENAME,MGR FROM EMP;
SELECT e.EMPNO 사번,
       e.ENAME 사원이름,
       e.MGR 상사번호,
       m.ENAME 상사이름
FROM EMP e, EMP m
WHERE e.MGR=m.EMPNO;

SELECT e.*,m.ENAME
    FROM EMP e LEFT JOIN EMP m
    ON e.MGR=m.EMPNO;


